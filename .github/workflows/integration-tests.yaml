name: Test Application
on:
  push:
    paths:
      - src/**
      - functions/**
      - .github/**
  pull_request:
    paths:
      - src/**
      - functions/**
  workflow_dispatch:
  workflow_call:

jobs:
  test-client:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "16"
      - name: Install Client Dependencies
        run: |
          npm install
      - name: Test Client
        run: |
          npm run test

  test-functions:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./functions
    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 54321:5432

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install Dependencies
        run: |
          npm install

      - name: Install Supabase Environment
        id: supabase
        run: |
          cd ~
          git clone --depth 1 https://github.com/supabase/supabase
          cd supabase/docker
          cp .env.example .env

          docker compose up -d --wait #start services and wait for containers to be healthy

          # Get Environment variables and make them accessible to future steps
          function getPathEnvVar {
            path="$1"
            var_name="$2"
            grep "^${var_name}=" "${path}" | sed -E "s%^${var_name}=\"?([^\"]+)\"?.*$%\1%"
          }

          echo "url=$(getPathEnvVar .env API_EXTERNAL_URL)" >> $GITHUB_OUTPUT
          echo "key=$(getPathEnvVar .env SERVICE_ROLE_KEY)" >> $GITHUB_OUTPUT

      - name: Test Functions
        run: |
          npm run test
        env:
          PG_URI: postgresql://postgres:postgres@localhost:54321/postgres
          SUPABASE_URL: ${{ steps.supabase.outputs.url }}
          SUPABASE_KEY: ${{ steps.supabase.outputs.key }}

      - name: Destroy Supabase Environment
        run: |
          cd ~/supabase/docker
          docker-compose down
